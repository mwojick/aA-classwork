!function(t){var e={};function s(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,s),o.l=!0,o.exports}s.m=t,s.c=e,s.d=function(t,e,n){s.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:n})},s.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=2)}([function(t,e){t.exports=class{constructor(t,e){this.game=t,this.rootEl=e,this.setupBoard(),this.bindEvents()}setupBoard(){for(let t=0;t<3;t++){this.rootEl.append(`<ul data-idx='${t}'></ul>`);for(let e=0;e<3;e++)0===t?$("ul").eq(t).append(`<li class='disk-${e+1}'></li>`):$("ul").eq(t).append('<li class=""></li>')}}bindEvents(){let t,e,s=!1;$("ul").on("click",n=>{let o=$(n.currentTarget);if(s){if($("ul").removeClass("selected"),e=parseInt(o.data("idx")),this.game.isValidMove(t,e)){let s,n=$("ul").eq(t).children();for(let t=0;t<n.length;t++)if(""!==n.eq(t).attr("class")){s=n.eq(t).attr("class"),n.eq(t).removeClass(s);break}let o=$("ul").eq(e).children();for(let t=2;t>-1;t--)if(""===o.eq(t).attr("class")){o.eq(t).addClass(s);break}this.game.move(t,e),this.game.isWon()&&($("li").css("background","green"),$("ul").off("click"))}s=!1}else o.addClass("selected"),t=parseInt(o.data("idx")),s=!0})}}},function(t,e){t.exports=class{constructor(){this.towers=[[3,2,1],[],[]]}isValidMove(t,e){const s=this.towers[t],n=this.towers[e];return 0!==s.length&&(0==n.length||s[s.length-1]<n[n.length-1])}isWon(){return 3==this.towers[2].length||3==this.towers[1].length}move(t,e){return!!this.isValidMove(t,e)&&(this.towers[e].push(this.towers[t].pop()),!0)}print(){console.log(JSON.stringify(this.towers))}promptMove(t,e){this.print(),t.question("Enter a starting tower: ",s=>{const n=parseInt(s);t.question("Enter an ending tower: ",t=>{const s=parseInt(t);e(n,s)})})}run(t,e){this.promptMove(t,(s,n)=>{this.move(s,n)||console.log("Invalid move!"),this.isWon()?(this.print(),console.log("You win!"),e()):this.run(t,e)})}}},function(t,e,s){const n=s(1),o=s(0);$(()=>{const t=$(".hanoi");window.HanoiGame=n;const e=new n;window.game=e,new o(e,t)})}]);